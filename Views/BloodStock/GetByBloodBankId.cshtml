@model IEnumerable<BBMSDATA1.Models.BloodStock>

@{
    ViewData["Title"] = "GetByBloodBankId";
}

<div class="container-fluid px-4 py-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="fs-2 fw-bold text-primary mb-1">Blood Stock </h1>
            <p class="text-muted">Manage blood stock levels for this blood bank</p>
        </div>
        <div>
            <a asp-controller="BloodStock" asp-action="AddBloodstock" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i> Add New Stock
            </a>
            <a asp-controller="ComponentStock" asp-action="AddCStocks" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i>Add Component Stock
            </a>

            <a asp-controller="ComponentStock" asp-action="Index" class="btn btn-primary">
                <i class="bi me-1"></i>Component Stock
            </a>
        </div>
    </div>

    <!-- Stock Stats Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">@Model.Sum(x => x.Quantity)</h5>
                        <div class="small">Total Units</div>
                    </div>
                    <i class="bi bi-droplet-fill fs-1"></i>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">@Model.Select(x => x.BloodGroupId).Distinct().Count()</h5>
                        <div class="small">Blood Groups</div>
                    </div>
                    <i class="bi bi-water fs-1"></i>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">@Model.Select(x => x.ComponentTypeId).Distinct().Count()</h5>
                        <div class="small">Component Types</div>
                    </div>
                    <i class="bi bi-collection fs-1"></i>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">@Model.OrderByDescending(x => x.LastUpdated).FirstOrDefault()?.LastUpdated.ToString("MMM dd, yyyy")</h5>
                        <div class="small">Last Updated</div>
                    </div>
                    <i class="bi bi-calendar-date fs-1"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="card mb-4">
        <div class="card-header bg-light">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <i class="bi bi-funnel me-1"></i> Filter Stock
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search...">
                        <button class="btn btn-outline-secondary" type="button">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <label for="bloodGroupFilter" class="form-label">Blood Group</label>
                        <select id="bloodGroupFilter" class="form-select">
                            <option value="">All Blood Groups</option>
                            @foreach (var group in Model.Select(x => x.BloodGroupId).Distinct())
                            {
                                <option value="@group">@group</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label for="componentFilter" class="form-label">Component Type</label>
                        <select id="componentFilter" class="form-select">
                            <option value="">All Components</option>
                            @foreach (var component in Model.Select(x => x.ComponentTypeId).Distinct())
                            {
                                <option value="@component">@component</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <label for="quantityFilter" class="form-label">Minimum Quantity</label>
                        <input type="number" id="quantityFilter" class="form-control" min="0" placeholder="0">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Data Table -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div><i class="bi bi-table me-1"></i> Blood Stock Data</div>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-download me-1"></i> Export
                </button>
                <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                    <li><a class="dropdown-item" href="#">Export as PDF</a></li>
                    <li><a class="dropdown-item" href="#">Export as Excel</a></li>
                    <li><a class="dropdown-item" href="#">Print Report</a></li>
                </ul>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0" id="stockTable">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-3">
                                <div class="d-flex align-items-center">
                                    <span>@Html.DisplayNameFor(model => model.BloodGroupId)</span>
                                    <i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
                                </div>
                            </th>
                            <th>
                                <div class="d-flex align-items-center">
                                    <span>@Html.DisplayNameFor(model => model.ComponentTypeId)</span>
                                    <i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
                                </div>
                            </th>
                            <th>
                                <div class="d-flex align-items-center">
                                    <span>@Html.DisplayNameFor(model => model.Quantity)</span>
                                    <i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
                                </div>
                            </th>
                            <th>Status</th>
                            <th>
                                <div class="d-flex align-items-center">
                                    <span>@Html.DisplayNameFor(model => model.LastUpdated)</span>
                                    <i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
                                </div>
                            </th>
                         
                            <th>
                                <div class="d-flex align-items-center">
                                    <span>@Html.DisplayNameFor(model => model.ExpiryDate)</span>
                                    <i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
                                </div>
                            </th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="ps-3">
                                    <div class="d-flex align-items-center">
                                        <span class="blood-type-badge @GetBloodGroupClass(item.BloodGroupId.ToString())">
                                            @item.BloodGroupId
                                        </span>
                                    </div>
                                </td>
                               
                                <td>@item.ComponentTypeId</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span class="me-2">@item.Quantity</span>
                                        @if (item.Quantity < 10)
                                        {
                                            <span class="badge bg-danger">Low</span>
                                        }
                                        else if (item.Quantity < 30)
                                        {
                                            <span class="badge bg-warning text-dark">Medium</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success">Sufficient</span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="progress" style="height: 5px;">
                                        <div class="progress-bar @GetProgressBarClass(item.Quantity)" role="progressbar"
                                             style="width: @Math.Min(item.Quantity, 100)%;" aria-valuenow="@item.Quantity"
                                             aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <span>@item.LastUpdated.ToString("MMM dd, yyyy")</span>
                                        <small class="text-muted">by @item.UpdatedBy</small>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span>@item.ExpiryDate.ToString("MMM dd, yyyy")</span>
                                        <small class="text-muted">by @item.UpdatedBy</small>
                                    </div>
                                </td>

                                <td>
                                    <div class="d-flex justify-content-center">
                                        <a asp-action="UpdateBloodstock" asp-route-id="@item.StockId" class="btn btn-sm btn-primary me-1" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.StockId" class="btn btn-sm btn-info me-1" title="Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.StockId" class="btn btn-sm btn-danger" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <nav>
                <ul class="pagination justify-content-end mb-0">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<style>
    .blood-type-badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 35px;
        height: 35px;
        border-radius: 50%;
        color: #fff;
        font-weight: bold;
    }

    .blood-a {
        background-color: #dc3545;
    }

    .blood-b {
        background-color: #0d6efd;
    }

    .blood-ab {
        background-color: #6f42c1;
    }

    .blood-o {
        background-color: #fd7e14;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Search functionality
            $("#searchInput").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $("#stockTable tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // Blood group filter
            $("#bloodGroupFilter").on("change", function() {
                filterTable();
            });

            // Component filter
            $("#componentFilter").on("change", function() {
                filterTable();
            });

            // Quantity filter
            $("#quantityFilter").on("change", function() {
                filterTable();
            });

            function filterTable() {
                var bloodGroup = $("#bloodGroupFilter").val().toLowerCase();
                var component = $("#componentFilter").val().toLowerCase();
                var quantity = $("#quantityFilter").val();

                $("#stockTable tbody tr").filter(function() {
                    var rowBloodGroup = $(this).find("td:nth-child(1)").text().trim().toLowerCase();
                    var rowComponent = $(this).find("td:nth-child(2)").text().trim().toLowerCase();
                    var rowQuantity = parseInt($(this).find("td:nth-child(3)").text().trim()) || 0;

                    var bloodGroupMatch = bloodGroup === "" || rowBloodGroup.indexOf(bloodGroup) > -1;
                    var componentMatch = component === "" || rowComponent.indexOf(component) > -1;
                    var quantityMatch = quantity === "" || rowQuantity >= parseInt(quantity);

                    $(this).toggle(bloodGroupMatch && componentMatch && quantityMatch);
                });
            }
        });
    </script>
}

@functions {
    public string GetBloodGroupClass(string bloodGroup)
    {
        if (bloodGroup.Contains("A") && bloodGroup.Contains("B"))
            return "blood-ab";
        if (bloodGroup.Contains("A"))
            return "blood-a";
        if (bloodGroup.Contains("B"))
            return "blood-b";
        return "blood-o";
    }

    public string GetProgressBarClass(int quantity)
    {
        if (quantity < 10)
            return "bg-danger";
        if (quantity < 30)
            return "bg-warning";
        return "bg-success";
    }
}


@model IEnumerable<BBMSDATA1.Models.BloodStock>

@{
	ViewData["Title"] = "GetByBloodBankId";
}

<div class="container-fluid px-4 py-3" style="background-color: var(--background);">
	<div class="d-flex justify-content-between align-items-center mb-4">
		<div>
			<h1 class="fs-2 fw-bold mb-1" style="color: var(--primary);">Blood Stock </h1>
			<p class="text-muted">Manage blood stock levels for this blood bank</p>
		</div>
		<div>
			<a asp-controller="BloodStock" asp-action="AddBloodstock" class="btn" style="background-color: var(--primary); color: white;">
				<i class="bi bi-plus-circle me-1"></i> Add New Stock
			</a>
			<a asp-controller="ComponentStock" asp-action="AddCStocks" class="btn" style="background-color: var(--primary); color: white;">
				<i class="bi bi-plus-circle me-1"></i>Add Component Stock
			</a>

			<a asp-controller="ComponentStock" asp-action="Index" class="btn" style="background-color: var(--primary); color: white;">
				<i class="bi me-1"></i>Component Stock
			</a>
		</div>
	</div>

	<!-- Stock Stats Cards -->
	<div class="row mb-4">
		<div class="col-xl-3 col-md-6">
			<div class="card mb-4" style="background-color: var(--primary); color: white;">
				<div class="card-body d-flex align-items-center justify-content-between">
					<div>
						<h5 class="mb-0">@Model.Sum(x => x.Quantity)</h5>
						<div class="small">Total Units</div>
					</div>
					<i class="bi bi-droplet-fill fs-1"></i>
				</div>
			</div>
		</div>
		<div class="col-xl-3 col-md-6">
			<div class="card mb-4" style="background-color: var(--secondary); color: white;">
				<div class="card-body d-flex align-items-center justify-content-between">
					<div>
						<h5 class="mb-0">@Model.Select(x => x.BloodGroupId).Distinct().Count()</h5>
						<div class="small">Blood Groups</div>
					</div>
					<i class="bi bi-water fs-1"></i>
				</div>
			</div>
		</div>
		<div class="col-xl-3 col-md-6">
			<div class="card mb-4" style="background-color: var(--warning); color: white;">
				<div class="card-body d-flex align-items-center justify-content-between">
					<div>
						<h5 class="mb-0">@Model.Select(x => x.ComponentTypeId).Distinct().Count()</h5>
						<div class="small">Component Types</div>
					</div>
					<i class="bi bi-collection fs-1"></i>
				</div>
			</div>
		</div>
		<div class="col-xl-3 col-md-6">
			<div class="card mb-4" style="background-color: var(--primary); color: white; opacity: 0.8;">
				<div class="card-body d-flex align-items-center justify-content-between">
					<div>
						<h5 class="mb-0">@Model.OrderByDescending(x => x.LastUpdated).FirstOrDefault()?.LastUpdated.ToString("MMM dd, yyyy")</h5>
						<div class="small">Last Updated</div>
					</div>
					<i class="bi bi-calendar-date fs-1"></i>
				</div>
			</div>
		</div>
	</div>

	<!-- Search and Filter -->
	<div class="card mb-4" style="border-color: var(--light); box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
		<div class="card-header" style="background-color: var(--light);">
			<div class="row align-items-center">
				<div class="col-md-6">
					<i class="bi bi-funnel me-1" style="color: var(--dark);"></i>
					<span style="color: var(--dark); font-weight: 500;">Filter Stock</span>
				</div>
				@*  <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search..." style="border-color: var(--light);">
                        <button class="btn" type="button" style="background-color: var(--primary); color: white;">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div> *@
			</div>
		</div>
		<div class="card-body">
			<div class="row">
				<div class="col-md-4">
					<div class="mb-3">
						<label for="bloodGroupFilter" class="form-label" style="color: var(--dark);">Blood Group</label>
						<select id="bloodGroupFilter" class="form-select" style="border-color: var(--light);">
							<option value="">All Blood Groups</option>
							@foreach (var group in Model.Select(x => x.BloodGroupId).Distinct())
							{
								<option value="@group">@group</option>
							}
						</select>
					</div>
				</div>
				<div class="col-md-4">
					<div class="mb-3">
						<label for="componentFilter" class="form-label" style="color: var(--dark);">Component Type</label>
						<select id="componentFilter" class="form-select" style="border-color: var(--light);">
							<option value="">All Components</option>
							@foreach (var component in Model.Select(x => x.ComponentTypeId).Distinct())
							{
								<option value="@component">@component</option>
							}
						</select>
					</div>
				</div>
				<div class="col-md-4">
					<div class="mb-3">
						<label for="quantityFilter" class="form-label" style="color: var(--dark);">Minimum Quantity</label>
						<input type="number" id="quantityFilter" class="form-control" min="0" placeholder="0" style="border-color: var(--light);">
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Data Table -->
	<div class="card mb-4" style="border-color: var(--light); box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
		<div class="card-header d-flex justify-content-between align-items-center" style="background-color: var(--light);">
			<div>
				<i class="bi bi-table me-1" style="color: var(--dark);"></i>
				<span style="color: var(--dark); font-weight: 500;">Blood Stock Data</span>
			</div>
		@* 	<div class="dropdown">
				<button class="btn btn-sm dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="background-color: var(--light); color: var(--dark); border-color: var(--dark);">
					<i class="bi bi-download me-1"></i> Export
				</button>
				<ul class="dropdown-menu" aria-labelledby="exportDropdown">
					<li><a class="dropdown-item" href="#">Export as PDF</a></li>
					<li><a class="dropdown-item" href="#">Export as Excel</a></li>
					<li><a class="dropdown-item" href="#">Print Report</a></li>
				</ul>
			</div> *@
		</div>
		<div class="card-body p-0">
			<div class="table-responsive">
				<table class="table table-striped table-hover mb-0" id="stockTable">
					<thead style="background-color: var(--light);">
						<tr>
							<th class="ps-3">
								<div class="d-flex align-items-center">
									<span style="color: var(--dark);">@Html.DisplayNameFor(model => model.BloodGroupId)</span>
									<i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
								</div>
							</th>
							<th>
								<div class="d-flex align-items-center">
									<span style="color: var(--dark);">@Html.DisplayNameFor(model => model.ComponentTypeId)</span>
									<i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
								</div>
							</th>
							<th>
								<div class="d-flex align-items-center">
									<span style="color: var(--dark);">@Html.DisplayNameFor(model => model.Quantity)</span>
									<i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
								</div>
							</th>
							<th style="color: var(--dark);">Status</th>
							<th>
								<div class="d-flex align-items-center">
									<span style="color: var(--dark);">@Html.DisplayNameFor(model => model.LastUpdated)</span>
									<i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
								</div>
							</th>

							<th>
								<div class="d-flex align-items-center">
									<span style="color: var(--dark);">@Html.DisplayNameFor(model => model.ExpiryDate)</span>
									<i class="bi bi-arrow-down-up ms-1 text-muted small"></i>
								</div>
							</th>
							<th class="text-center" style="color: var(--dark);">Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model)
						{
							<tr>
								<td class="ps-3">
									<div class="d-flex align-items-center">
										<span class="blood-type-badge @GetBloodGroupClass(item.BloodGroupId.ToString())">
											@item.BloodGroupId
										</span>
									</div>
								</td>

								<td>@item.ComponentTypeId</td>
								<td>
									<div class="d-flex align-items-center">
										<span class="me-2">@item.Quantity</span>
										@if (item.Quantity < 10)
										{
											<span class="badge" style="background-color: var(--danger);">Low</span>
										}
										else if (item.Quantity < 30)
										{
											<span class="badge" style="background-color: var(--warning);">Medium</span>
										}
										else
										{
											<span class="badge" style="background-color: var(--secondary);">Sufficient</span>
										}
									</div>
								</td>
								<td>
									<div class="progress" style="height: 5px;">
										<div class="progress-bar @GetProgressBarClass(item.Quantity)" role="progressbar"
											 style="width: @Math.Min(item.Quantity, 100)%;" aria-valuenow="@item.Quantity"
											 aria-valuemin="0" aria-valuemax="100"></div>
									</div>
								</td>
								<td>
									<div class="d-flex flex-column">
										<span>@item.LastUpdated.ToString("MMM dd, yyyy")</span>
										<small class="text-muted">by @item.UpdatedBy</small>
									</div>
								</td>
								<td>
									<div class="d-flex align-items-center">
										<span>@item.ExpiryDate.ToString("MMM dd, yyyy")</span>
										<small class="text-muted">by @item.UpdatedBy</small>
									</div>
								</td>

								<td>
									<div class="d-flex justify-content-center">
										<a asp-action="UpdateBloodstock" asp-route-id="@item.StockId" class="btn btn-sm me-1" title="Edit" style="background-color: var(--primary); color: white;">
											<i class="bi bi-pencil"></i>
										</a>
									@* 	<a asp-action="Details" asp-route-id="@item.StockId" class="btn btn-sm me-1" title="Details" style="background-color: var(--dark); color: white;">
											<i class="bi bi-eye"></i>
										</a> *@
										<a asp-action="InActiveBloodstock" asp-route-id="@item.StockId" class="btn btn-sm" title="Delete" style="background-color: var(--danger); color: white;">
											<i class="bi bi-trash"></i>
										</a>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="card-footer" style="background-color: var(--light);">
			<nav>
				<ul class="pagination justify-content-end mb-0">
					<li class="page-item disabled">
						<a class="page-link" href="#" tabindex="-1" aria-disabled="true" style="color: var(--dark); border-color: var(--light);">Previous</a>
					</li>
					<li class="page-item active"><a class="page-link" href="#" style="background-color: var(--primary); border-color: var(--primary);">1</a></li>
					<li class="page-item"><a class="page-link" href="#" style="color: var(--dark); border-color: var(--light);">2</a></li>
					<li class="page-item"><a class="page-link" href="#" style="color: var(--dark); border-color: var(--light);">3</a></li>
					<li class="page-item">
						<a class="page-link" href="#" style="color: var(--dark); border-color: var(--light);">Next</a>
					</li>
				</ul>
			</nav>
		</div>
	</div>
</div>

<style>
	:root {
		--primary: #4a90e2;
		--secondary: #2ecc71;
		--danger: #e74c3c;
		--warning: #f39c12;
		--dark: #2c3e50;
		--light: #ecf0f1;
		--background: #f4f6f7;
	}

	body {
		background-color: var(--background);
	}

	.blood-type-badge {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: 35px;
		height: 35px;
		border-radius: 50%;
		color: #fff;
		font-weight: bold;
	}

	.blood-a {
		background-color: #e74c3c;
	}

	.blood-b {
		background-color: #4a90e2;
	}

	.blood-ab {
		background-color: #9b59b6;
	}

	.blood-o {
		background-color: #f39c12;
	}

	.card {
		border-radius: 8px;
		overflow: hidden;
		transition: transform 0.2s, box-shadow 0.2s;
	}

		.card:hover {
			transform: translateY(-3px);
			box-shadow: 0 5px 15px rgba(0,0,0,0.1);
		}

	.btn {
		border-radius: 6px;
		transition: all 0.2s;
	}

		.btn:hover {
			transform: translateY(-2px);
			box-shadow: 0 3px 8px rgba(0,0,0,0.1);
		}
</style>

@section Scripts {
	<script>
		$(document).ready(function () {
			// Search functionality
			$("#searchInput").on("keyup", function() {
				var value = $(this).val().toLowerCase();
				$("#stockTable tbody tr").filter(function() {
					$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
				});
			});

			// Blood group filter
			$("#bloodGroupFilter").on("change", function() {
				filterTable();
			});

			// Component filter
			$("#componentFilter").on("change", function() {
				filterTable();
			});

			// Quantity filter
			$("#quantityFilter").on("change", function() {
				filterTable();
			});

			function filterTable() {
				var bloodGroup = $("#bloodGroupFilter").val().toLowerCase();
				var component = $("#componentFilter").val().toLowerCase();
				var quantity = $("#quantityFilter").val();

				$("#stockTable tbody tr").filter(function() {
					var rowBloodGroup = $(this).find("td:nth-child(1)").text().trim().toLowerCase();
					var rowComponent = $(this).find("td:nth-child(2)").text().trim().toLowerCase();
					var rowQuantity = parseInt($(this).find("td:nth-child(3)").text().trim()) || 0;

					var bloodGroupMatch = bloodGroup === "" || rowBloodGroup.indexOf(bloodGroup) > -1;
					var componentMatch = component === "" || rowComponent.indexOf(component) > -1;
					var quantityMatch = quantity === "" || rowQuantity >= parseInt(quantity);

					$(this).toggle(bloodGroupMatch && componentMatch && quantityMatch);
				});
			}
		});
	</script>
}

@functions {
	public string GetBloodGroupClass(string bloodGroup)
	{
		if (bloodGroup.Contains("A") && bloodGroup.Contains("B"))
			return "blood-ab";
		if (bloodGroup.Contains("A"))
			return "blood-a";
		if (bloodGroup.Contains("B"))
			return "blood-b";
		return "blood-o";
	}

	public string GetProgressBarClass(int quantity)
	{
		if (quantity < 10)
			return "bg-danger";
		if (quantity < 30)
			return "bg-warning";
		return "bg-success";
	}
}
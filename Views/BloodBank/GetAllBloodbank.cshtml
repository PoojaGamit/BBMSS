@model IEnumerable<BBMSDATA1.Models.BloodBanks>

@{
	ViewData["Title"] = "GetAllBloodbank";
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Blood Banks Directory</title>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
	<style>
		:root {
			--primary: #4a90e2;
			--secondary: #2ecc71;
			--danger: #e74c3c;
			--warning: #f39c12;
			--dark: #2c3e50;
			--light: #ecf0f1;
			--background: #f4f6f7;
		}

		body {
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			background-color: var(--background);
			display: flex;
			flex-direction: column;
			min-height: 100vh;
			position: relative;
		}

		.search-container {
			background-color: white;
			padding: 20px;
			border-radius: 8px;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			margin: 20px 0;
		}

		.search-input {
			width: 100%;
			padding: 12px;
			border: 1px solid var(--light);
			border-radius: 4px;
			font-size: 16px;
		}

		.blood-banks-grid {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
			gap: 20px;
			margin-top: 20px;
		}

		.blood-bank-card {
			background-color: white;
			border-radius: 8px;
			overflow: hidden;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			transition: transform 0.3s ease, box-shadow 0.3s ease;
		}

			.blood-bank-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
			}

		.blood-bank-header {
			background-color: var(--primary);
			color: white;
			padding: 15px;
		}

		.blood-bank-name {
			margin: 0;
			font-size: 1.2rem;
			font-weight: 600;
		}

		.blood-bank-body {
			padding: 15px;
		}

		.info-item {
			display: flex;
			margin-bottom: 10px;
		}

		.info-icon {
			color: var(--primary);
			width: 20px;
			margin-right: 10px;
		}

		.info-text {
			flex-grow: 1;
		}

		.blood-bank-footer {
			display: flex;
			justify-content: space-between;
			padding: 15px;
			background-color: var(--light);
			border-top: 1px solid #eee;
		}

		.action-btn {
			padding: 8px 12px;
			border: none;
			border-radius: 4px;
			cursor: pointer;
			font-weight: 500;
			transition: background-color 0.3s ease;
		}

		.details-btn {
			background-color: var(--secondary);
			color: white;
		}

			.details-btn:hover {
				background-color: #27ae60;
			}

		.contact-btn {
			background-color: var(--primary);
			color: white;
		}

			.contact-btn:hover {
				background-color: #3498db;
			}

		.pagination {
			display: flex;
			justify-content: center;
			margin-top: 30px;
		}

		.pagination-btn {
			padding: 8px 16px;
			border: 1px solid var(--light);
			margin: 0 5px;
			cursor: pointer;
			background-color: white;
			border-radius: 4px;
			transition: all 0.3s ease;
		}

			.pagination-btn:hover {
				background-color: var(--light);
			}

			.pagination-btn.active {
				background-color: var(--primary);
				color: white;
				border-color: var(--primary);
			}
	</style>
</head>
<body>

	@*   <header1>
        <div class="container">
            <h1 class="page-title">Blood Banks Directory</h1>
        </div>
    </header1> *@

	<div class="container">
		<div class="search-container">
			<input type="text" class="search-input" placeholder="Search for blood banks by name, location, or contact...">
		</div>

		<div class="blood-banks-grid">
			@foreach (var item in Model)
			{
				<div class="blood-bank-card">
					<div class="blood-bank-header">
						<h2 class="blood-bank-name">@Html.DisplayFor(modelItem => item.BloodBankName)</h2>
					</div>
					<div class="blood-bank-body">
						<div class="info-item">
							<span class="info-icon"><i class="fas fa-phone"></i></span>
							<span class="info-text">@Html.DisplayFor(modelItem => item.ContactNumber)</span>
						</div>
						<div class="info-item">
							<span class="info-icon"><i class="fas fa-envelope"></i></span>
							<span class="info-text">@Html.DisplayFor(modelItem => item.Email)</span>
						</div>
						<div class="info-item">
							<span class="info-icon"><i class="fas fa-map-marker-alt"></i></span>
							<span class="info-text">@Html.DisplayFor(modelItem => item.Address)</span>
						</div>
					</div>
					 <div class="blood-bank-footer">
                        <button class="action-btn details-btn">View BloodStock</button>
                        @* <button class="action-btn contact-btn">Contact</button> *@
                    </div>
				</div>
			}
		</div>

		<div class="pagination">
			<button class="pagination-btn">Previous</button>
			<button class="pagination-btn active">1</button>
			<button class="pagination-btn">2</button>
			<button class="pagination-btn">3</button>
			<button class="pagination-btn">Next</button>
		</div>
	</div>

	<script>
		// Simple search functionality
		document.querySelector('.search-input').addEventListener('keyup', function() {
			const searchValue = this.value.toLowerCase();
			const bloodBankCards = document.querySelectorAll('.blood-bank-card');

			bloodBankCards.forEach(card => {
				const text = card.textContent.toLowerCase();
				if (text.includes(searchValue)) {
					card.style.display = 'block';
				} else {
					card.style.display = 'none';
				}
			});
		});

		// // For the buttons (in a real app, these would link to other pages/actions)
		document.querySelectorAll('.details-btn').forEach(btn => {
		    btn.addEventListener('click', function() {
		        const card = this.closest('.blood-bank-card');
		        const bloodBankName = card.querySelector('.blood-bank-name').textContent;
		        alert(`View details for ${bloodBankName}`);
		    });
		});

		// document.querySelectorAll('.contact-btn').forEach(btn => {
		//     btn.addEventListener('click', function() {
		//         const card = this.closest('.blood-bank-card');
		//         const bloodBankName = card.querySelector('.blood-bank-name').textContent;
		//         const email = card.querySelectorAll('.info-text')[1].textContent;
		//         alert(`Contact ${bloodBankName} at ${email}`);
		//     });
		// });
	</script>
</body>
</html>
@model IEnumerable<BBMSDATA1.Models.BloodBanks>

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Blood Banks Directory</title>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
	<style>
		:root {
			--primary: #4a90e2;
			--secondary: #2ecc71;
			--danger: #e74c3c;
			--warning: #f39c12;
			--dark: #2c3e50;
			--light: #ecf0f1;
			--background: #f4f6f7;
		}

		body {
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			background-color: var(--background);
			display: flex;
			flex-direction: column;
			min-height: 100vh;
			position: relative;
		}

		.search-container {
			background-color: white;
			padding: 20px;
			border-radius: 8px;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			margin: 20px 0;
		}

		.search-input {
			width: 100%;
			padding: 12px;
			border: 1px solid var(--light);
			border-radius: 4px;
			font-size: 16px;
		}

		.blood-banks-grid {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
			gap: 20px;
			margin-top: 20px;
		}

		.blood-bank-card {
			background-color: white;
			border-radius: 8px;
			overflow: hidden;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			transition: transform 0.3s ease, box-shadow 0.3s ease;
		}

			.blood-bank-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
			}

		.blood-bank-header {
			background-color: var(--primary);
			color: white;
			padding: 15px;
		}

		.blood-bank-name {
			margin: 0;
			font-size: 1.2rem;
			font-weight: 600;
		}

		.blood-bank-body {
			padding: 15px;
		}

		.info-item {
			display: flex;
			margin-bottom: 10px;
		}

		.info-icon {
			color: var(--primary);
			width: 20px;
			margin-right: 10px;
		}

		.info-text {
			flex-grow: 1;
		}

		.blood-bank-footer {
			display: flex;
			justify-content: space-between;
			padding: 15px;
			background-color: var(--light);
			border-top: 1px solid #eee;
		}

		.action-btn {
			padding: 8px 12px;
			border: none;
			border-radius: 4px;
			cursor: pointer;
			font-weight: 500;
			transition: background-color 0.3s ease;
		}

		.details-btn {
			background-color: var(--secondary);
			color: white;
		}

			.details-btn:hover {
				background-color: #27ae60;
			}

		.contact-btn {
			background-color: var(--primary);
			color: white;
		}

			.contact-btn:hover {
				background-color: #3498db;
			}

		/* Popup Box Styling */
		/* Popup container */
		#popupBox {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5);
			justify-content: center;
			align-items: center;
			z-index: 1000;
		}

		/* Popup content */
		.popup-content {
			background-color: white;
			padding: 25px;
			border-radius: 8px;
			box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
			width: 90%;
			max-width: 500px;
			position: relative;
			animation: fadeIn 0.3s ease-in-out;
		}

		/* Popup header */
		.popup-header {
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin-bottom: 20px;
			padding-bottom: 10px;
			border-bottom: 1px solid #e0e0e0;
		}

			.popup-header h3 {
				margin: 0;
				color: #d32f2f;
				font-size: 1.5rem;
			}

		/* Close button */
		.close-btn {
			background: none;
			border: none;
			font-size: 24px;
			cursor: pointer;
			color: #777;
			transition: color 0.2s;
		}

			.close-btn:hover {
				color: #d32f2f;
			}

		/* Popup body */
		#popupBody {
			max-height: 400px;
			overflow-y: auto;
		}

			/* Blood group items */
			#popupBody h5 {
				padding: 12px 15px;
				margin: 8px 0;
				border-radius: 6px;
				background-color: #f9f9f9;
				border-left: 4px solid #e53935;
				font-weight: 500;
				display: flex;
				justify-content: space-between;
			}

				#popupBody h5 .blood-units {
					font-weight: 700;
					color: #d32f2f;
				}




		.pagination {
			display: flex;
			justify-content: center;
			margin-top: 30px;
		}

		.pagination-btn {
			padding: 8px 16px;
			border: 1px solid var(--light);
			margin: 0 5px;
			cursor: pointer;
			background-color: white;
			border-radius: 4px;
			transition: all 0.3s ease;
		}

			.pagination-btn:hover {
				background-color: var(--light);
			}

			.pagination-btn.active {
				background-color: var(--primary);
				color: white;
				border-color: var(--primary);
			}
	</style>
</head>
<body>

	@*   <header1>
        <div class="container">
            <h1 class="page-title">Blood Banks Directory</h1>
        </div>
    </header1> *@

	<div class="container">
		<div class="search-container">
			<input type="text" class="search-input" placeholder="Search for blood banks by name, location, or contact...">
		</div>

		<div class="blood-banks-grid">
			@foreach (var item in Model)
			{
				<div class="blood-bank-card">
					<div class="blood-bank-header">
						<h2 class="blood-bank-name">@Html.DisplayFor(modelItem => item.BloodBankName)</h2>
					</div>
					<div class="blood-bank-body">
						<div class="info-item">
							<span class="info-icon"><i class="fas fa-phone"></i></span>
							<span class="info-text">@Html.DisplayFor(modelItem => item.ContactNumber)</span>
						</div>
						<div class="info-item">
							<span class="info-icon"><i class="fas fa-envelope"></i></span>
							<span class="info-text">@Html.DisplayFor(modelItem => item.Email)</span>
						</div>
						<div class="info-item">
							<span class="info-icon"><i class="fas fa-map-marker-alt"></i></span>
							<span class="info-text">@Html.DisplayFor(modelItem => item.Address)</span>
						</div>
					</div>
					<div class="blood-bank-footer">
						<a class="action-btn details-btn" href="#" data-id="@item.BloodBankId">View BloodStock</a>
@* 						<a class="action-btn details-btn" href="#" onclick="fetchBloodStock(@item.BloodBankId)">View BloodStock</a> *@

					@* 	<a class="action-btn details-btn" asp-route-id="@item.BloodBankId" asp-action="GetBloodBank" asp-controller="BloodStock">View BloodStock</a> *@

						@* <button class="action-btn contact-btn">Contact</button> *@
					</div>
				</div>
			}
		</div>
		<!-- Popup Box -->
		<div id="popupBox" class="popup-box">
			<div class="popup-content">
				<span class="close-btn">&times;</span>
				<h2>Blood Stock Details</h2>
				<div id="popupBody">
					@if (ViewBag.BloodData == null)
					{
						<h5>No Blood Stock Available</h5>
					}
					else
					{
						@foreach (var blod in ViewBag.BloodData)
						{
							<h5>@blod.BloodGroupName</h5>
						}
					}
				</div>
			</div>
		</div>

		<div id="popupBox">
			<div class="popup-content">
				<div class="popup-header">
					<h3>Blood Stock Details</h3>
					<button class="close-btn">&times;</button>
				</div>
				<div id="popupBody">
					<!-- Blood stock information will be populated here -->
				</div>
			</div>
		</div>

		<div class="pagination">
			<button class="pagination-btn">Previous</button>
			<button class="pagination-btn active">1</button>
			<button class="pagination-btn">2</button>
			<button class="pagination-btn">3</button>
			<button class="pagination-btn">Next</button>
		</div>
	</div>
	
		<script>
				document.addEventListener("DOMContentLoaded", function() {
			// Add event listeners to all "View BloodStock" buttons
			document.querySelectorAll(".details-btn").forEach(button => {
				button.addEventListener("click", function(e) {
					e.preventDefault();
					const bloodBankId = this.getAttribute("data-id");
					fetchBloodStock(bloodBankId);
				});
			});

			// Close the popup when clicking the close button
			document.querySelector(".close-btn").addEventListener("click", function() {
				document.getElementById("popupBox").style.display = "none";
			});

			// Also close the popup when clicking outside of it
			document.getElementById("popupBox").addEventListener("click", function(e) {
				if (e.target === this) {
					this.style.display = "none";
				}
			});
		});

		function fetchBloodStock(bloodBankId) {
			fetch(`https://localhost:7193/BloodStock/GetBloodStock/${bloodBankId}`)
				.then(response => {
					if (!response.ok) {
						throw new Error("Network response was not ok");
					}
					return response.json();
				})
				.then(data => {
					console.log("API Response:", data);
					let popupBody = document.getElementById("popupBody");
					popupBody.innerHTML = "";

					if (!data || data.length === 0) {
						popupBody.innerHTML = "<h5>No Blood Stock Available</h5>";
					} else {
						data.forEach(blood => {
							// Ensure the property names match your API response
							let bloodGroup = blood.bloodGroupName || "Unknown Blood Group";
							let units = blood.units || "Unknown Units";

							popupBody.innerHTML += `<h5>${bloodGroup}: ${units} units</h5>`;
						});
					}

					document.getElementById("popupBox").style.display = "flex";
				})
				.catch(error => {
					console.error("Error fetching blood stock:", error);
					alert("Failed to retrieve blood stock details.");
				});
		}	
		 function displayBloodStock(data) {
			console.log("API Response:", data);
			let popupBody = document.getElementById("popupBody");
			popupBody.innerHTML = "";

			if (!data || data.length === 0) {
				popupBody.innerHTML = "<h5>No Blood Stock Available</h5>";
			} else {
				data.forEach(blood => {
					// Ensure the property names match your API response
					let bloodGroup = blood.bloodGroupName || "Unknown Blood Group";
					let units = blood.units || "Unknown Units";

					// Calculate a percentage for the blood level indicator (max at 100 units)
					let percentage = Math.min(100, (units / 100) * 100);

					// Create the HTML for each blood group
					let bloodGroupHtml = `
						<div>
							<h5>
								<span>${bloodGroup}</span>
								<span class="blood-units">${units} units</span>
							</h5>
							<div class="blood-level">
								<div class="blood-level-fill" style="width: ${percentage}%"></div>
							</div>
						</div>
					`;

					popupBody.innerHTML += bloodGroupHtml;
				});
			}

			document.getElementById("popupBox").style.display = "flex";
		}
	</script>

	</body>
</html>
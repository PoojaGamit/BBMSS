@model BBMSDATA1.Models.Notification
@{
    ViewData["Title"] = "Update Notification";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Update Notification</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <style>
        :root {
            --primary: #4a90e2;
            --secondary: #2ecc71;
            --danger: #e74c3c;
            --warning: #f39c12;
            --dark: #2c3e50;
            --light: #ecf0f1;
            --background: #f4f6f7;
        }

        body {
            background-color: var(--background);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .page-header {
            margin-bottom: 25px;
        }

        .page-title {
            color: var(--dark);
            font-weight: 600;
            margin-bottom: 5px;
        }

        .page-subtitle {
            color: var(--primary);
            font-weight: 500;
            margin-bottom: 20px;
        }

        .content-divider {
            height: 2px;
            background: linear-gradient(90deg, var(--primary), transparent);
            margin-bottom: 25px;
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 6px 15px rgba(44, 62, 80, 0.1);
            background-color: white;
            overflow: hidden;
        }

        .card-body {
            padding: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .control-label {
            color: var(--dark);
            font-weight: 500;
            margin-bottom: 8px;
            display: block;
        }

        .required::after {
            content: " *";
            color: var(--danger);
        }

        .form-control {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 12px 15px;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.2);
            }

        textarea.form-control {
            min-height: 120px;
        }

        .form-check {
            padding-left: 30px;
            margin-top: 15px;
            margin-bottom: 15px;
        }

        .form-check-input {
            width: 20px;
            height: 20px;
            margin-left: -30px;
            margin-top: 0;
            border: 1px solid #ccc;
        }

            .form-check-input:checked {
                background-color: var(--primary);
                border-color: var(--primary);
            }

        .form-check-label {
            padding-top: 2px;
            font-weight: 500;
        }

        .btn {
            border-radius: 8px;
            padding: 12px 24px;
            font-weight: 500;
            transition: transform 0.2s, box-shadow 0.2s;
        }

            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

        .btn-primary {
            background-color: var(--primary);
            border: none;
        }

            .btn-primary:hover {
                background-color: #3a80d2;
            }

        .btn-secondary {
            background-color: var(--light);
            border: none;
            color: var(--dark);
        }

            .btn-secondary:hover {
                background-color: #dce4e6;
            }

        .text-danger {
            color: var(--danger) !important;
            font-size: 0.85rem;
            margin-top: 5px;
            display: block;
        }

        .actions-row {
            display: flex;
            gap: 10px;
        }

        .back-link {
            color: var(--primary);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            margin-top: 20px;
            font-weight: 500;
            transition: color 0.3s;
        }

            .back-link:hover {
                color: #3a80d2;
                text-decoration: underline;
            }

        .input-group-text {
            background-color: var(--light);
            border-color: #ddd;
            color: var(--dark);
        }

        .date-input {
            position: relative;
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out;
        }
    </style>
</head>
<body>
    <div class="container py-4 fade-in">
        <div class="page-header">
            <h1 class="page-title">Update Notification</h1>
            <h4 class="page-subtitle">Edit notification details and settings</h4>
        </div>
        <div class="content-divider"></div>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <form asp-action="UpdateNotifi">
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
                            <input type="hidden" asp-for="NotificationId" />

                            <div class="form-group">
                                <label asp-for="BloodBankId" class="control-label required">Blood Bank</label>
                                <input asp-for="BloodBankId" class="form-control" />
                                <span asp-validation-for="BloodBankId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Title" class="control-label required">Notification Title</label>
                                <input asp-for="Title" class="form-control" placeholder="Enter notification title" />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Message" class="control-label required">Message Content</label>
                                <textarea asp-for="Message" class="form-control" placeholder="Enter notification message"></textarea>
                                <span asp-validation-for="Message" class="text-danger"></span>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="StartDate" class="control-label required">Start Date</label>
                                        <div class="input-group date-input">
                                            <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                            <input asp-for="StartDate" class="form-control" type="datetime-local" />
                                        </div>
                                        <span asp-validation-for="StartDate" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="EndDate" class="control-label required">End Date</label>
                                        <div class="input-group date-input">
                                            <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                            <input asp-for="EndDate" class="form-control" type="datetime-local" />
                                        </div>
                                        <span asp-validation-for="EndDate" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group form-check">
                                <input class="form-check-input" asp-for="IsActive" />
                                <label class="form-check-label" asp-for="IsActive">
                                    Active Notification
                                </label>
                                <small class="form-text text-muted d-block mt-1">
                                    When active, this notification will be visible to users during the specified date range
                                </small>
                            </div>

                            <div class="actions-row mt-4">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i> Save Changes
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-times me-1"></i> Cancel
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <a asp-action="Index" class="back-link">
            <i class="fas fa-arrow-left me-1"></i> Back to Notifications List
        </a>
    </div>

    <script>
        // Set default values for dates if empty
        document.addEventListener('DOMContentLoaded', function() {
            const startDateInput = document.querySelector('[asp-for="StartDate"]');
            const endDateInput = document.querySelector('[asp-for="EndDate"]');

            if (!startDateInput.value) {
                const now = new Date();
                const year = now.getFullYear();
                const month = (now.getMonth() + 1).toString().padStart(2, '0');
                const day = now.getDate().toString().padStart(2, '0');
                const hours = now.getHours().toString().padStart(2, '0');
                const minutes = now.getMinutes().toString().padStart(2, '0');

                startDateInput.value = `${year}-${month}-${day}T${hours}:${minutes}`;
            }

            if (!endDateInput.value) {
                const now = new Date();
                now.setDate(now.getDate() + 14); // Default end date is 14 days after start

                const year = now.getFullYear();
                const month = (now.getMonth() + 1).toString().padStart(2, '0');
                const day = now.getDate().toString().padStart(2, '0');
                const hours = now.getHours().toString().padStart(2, '0');
                const minutes = now.getMinutes().toString().padStart(2, '0');

                endDateInput.value = `${year}-${month}-${day}T${hours}:${minutes}`;
            }
        });
    </script>
</body>
</html>